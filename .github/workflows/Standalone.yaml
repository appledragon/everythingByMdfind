name: Build Standalone Application

on:
  # 手动触发
  workflow_dispatch:

# 关键：给 GITHUB_TOKEN 写入（contents: write）权限，否则无法创建发布
permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: macos-latest
    steps:
      # 1. 检出仓库代码
      - name: Check out repository
        uses: actions/checkout@v2

      # 2. 设置 Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 4. 使用 PyInstaller 打包两个架构
      - name: Build standalone application
        run: |
          # 创建x86_64版本
          pyinstaller --target-architecture x86_64 --onefile --windowed --noconsole everything.py
          mkdir -p dist_x86_64
          mv dist/everything dist_x86_64/
          zip -r everything-x86_64.zip dist_x86_64

          # 清理构建文件
          rm -rf build dist

          # 创建arm64版本
          pyinstaller --target-architecture arm64 --onefile --windowed --noconsole everything.py
          mkdir -p dist_arm64
          mv dist/everything dist_arm64/
          zip -r everything-arm64.zip dist_arm64

      # 5. 创建 GitHub Release
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v1.3.1'
          release_name: 'v1.3.1'
          draft: false
          prerelease: false

      # 6. 上传 x86_64 版本
      - name: Upload x86_64 release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: everything-x86_64.zip
          asset_name: everything-x86_64.zip
          asset_content_type: application/zip
          
      # 7. 上传 arm64 版本
      - name: Upload arm64 release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: everything-arm64.zip
          asset_name: everything-arm64.zip
          asset_content_type: application/zip
